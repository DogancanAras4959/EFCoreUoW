@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Common;

@{
    int id = Convert.ToInt32(TempData["data-id"]);
}

<div class="form-group">
    <p>Düzenlemesini yaptığınız ürün için bağlı ürünler oluşturmak istiyorsanız aşağıda yer alan ürün arama formundan ürünlerinizi seçin ve toplu ürün bağlama işleminizi gerçekleştirin.</p>
    <p>Not: Listeleme sırasında sayfa yenilenir. Bir sonraki sayfaya geçtiğinizi görme için sekmeyi tekrar açın."</p>
</div>
<div>
    <table class="table table-condensed">
        <tbody id="urunList">
            @foreach (UoW.DOMAIN.Models.Urun item in ViewBag.Urun)
            {
                if (item.ID != id)
                {
            <tr>
                <td><input type="checkbox" id="Check_@item.ID" /></td>
                <td>@item.ID</td>
                <td>@item.UrunNo</td>
                @if (item.UrunAdi.Length > 20)
                {
                    <td>@item.UrunAdi.Substring(0, 20)</td>
                }

            </tr>
                }
            }

        </tbody>
    </table>
    <div class="row">
        <div class="col-lg-12">
            @Html.PagedListPager((IPagedList<UoW.DOMAIN.Models.Urun>)ViewBag.Urun,
           page => Url.Action("EditProduct", new { page }),
           PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
           {
                    MaximumPageNumbersToDisplay = 10,
               DisplayPageCountAndCurrentLocation = true,
               UlElementClasses = new[] { "pagination pagination-rounded justify-content-center mt-4" },
               LiElementClasses = new[] { "page-link" },
               EllipsesFormat = "&#8230;",
               DisplayLinkToIndividualPages = true,
               ActiveLiElementClass = "page-item",
               DisplayLinkToFirstPage = X.PagedList.Web.Common.PagedListDisplayMode.IfNeeded,
               DisplayLinkToLastPage = X.PagedList.Web.Common.PagedListDisplayMode.IfNeeded,
               DisplayLinkToPreviousPage = X.PagedList.Web.Common.PagedListDisplayMode.IfNeeded,
               DisplayLinkToNextPage = X.PagedList.Web.Common.PagedListDisplayMode.IfNeeded,
               PageCountAndCurrentLocationFormat = "",
               ContainerDivClasses = new[] { "pagination-container" }
                },
            new AjaxOptions() { HttpMethod = "GET" }))
        </div>
    </div>
</div>
<div class="form-group">
    <button type="button" id="btn_bagla" onclick="UpdateParentProduct(@id,event);" class="btn btn-block btn-primary btn-sm">Ürünleri Bağla</button>
</div>

<script>
    var UpdateParentProduct = function (id, e) {
        e.preventDefault();
        $("#btn_bagla").attr("disabled", true);
        var arrItem = [];
        var commaSeparatedIds = "";
        var urunId = id;
        $("#urunList tr td input[type=checkbox]").each(function (index, val) {

            var checkId = $(val).attr("Id");
            var arr = checkId.split('_');
            var currentCheckboxId = arr[1];
            var Ischecked = $("#" + checkId).is(":checked", true);

            if (Ischecked) {
                arrItem.push(currentCheckboxId);
            }

        })

        if (arrItem.length != 0) {
            commaSeparatedIds = arrItem.toString();
            $.ajax({
                url: "/Urun/ContextProduct",
                type: "POST",
                data: { urunList: commaSeparatedIds, urunId },
                success: function (response) {
                    toastr['success']('Ürünleri bağlama işlemi başarıyla gerçekleşti!', 'Ürün Düzenleme');
                    window.location = "/Urun/EditProduct/" + urunId;
                }
            });
        }
        else {
            toastr['warning']('Lütfen bağlanacak ürün seçiniz!', 'Ürün Düzenleme');
            $("#btn_bagla").attr("disabled", false);
        }
    }
</script>